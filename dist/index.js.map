{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar prevGraphemeClusterBreak = require( '@stdlib/string-prev-grapheme-cluster-break' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Reverses a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} reversed string\n*\n* @example\n* var out = reverse( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* @example\n* var out = reverse( 'presidential election' );\n* // returns 'noitcele laitnediserp'\n*\n* @example\n* var out = reverse( 'javaScript' );\n* // returns 'tpircSavaj'\n*\n* @example\n* var out = reverse( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH'\n*/\nfunction reverse( str ) {\n\tvar out;\n\tvar brk;\n\tvar idx;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\n\tout = [];\n\tidx = str.length - 1;\n\twhile ( idx >= 0 ) {\n\t\tbrk = prevGraphemeClusterBreak( str, idx );\n\t\tfor ( i = brk + 1; i <= idx; i++ ) {\n\t\t\tout.push( str.charAt( i ) );\n\t\t}\n\t\tidx = brk;\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = reverse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reverse a string.\n*\n* @module @stdlib/string-reverse\n*\n* @example\n* var reverseString = require( '@stdlib/string-reverse' );\n*\n* var out = reverseString( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* out = reverseString( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH';\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAA2B,QAAS,4CAA6C,EACjFC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAS,QAAS,uBAAwB,EA4B9C,SAASC,EAASC,EAAM,CACvB,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAK,CAACP,EAAUG,CAAI,EACnB,MAAM,IAAI,UAAWF,EAAQ,kEAAmEE,CAAI,CAAE,EAEvG,GAAKA,IAAQ,GACZ,MAAO,GAKR,IAFAC,EAAM,CAAC,EACPE,EAAMH,EAAI,OAAS,EACXG,GAAO,GAAI,CAElB,IADAD,EAAMN,EAA0BI,EAAKG,CAAI,EACnCC,EAAIF,EAAM,EAAGE,GAAKD,EAAKC,IAC5BH,EAAI,KAAMD,EAAI,OAAQI,CAAE,CAAE,EAE3BD,EAAMD,CACP,CACA,OAAOD,EAAI,KAAM,EAAG,CACrB,CAKAN,EAAO,QAAUI,IC1CjB,IAAIM,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "prevGraphemeClusterBreak", "isString", "format", "reverse", "str", "out", "brk", "idx", "i", "main"]
}
