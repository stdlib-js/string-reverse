// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{factory as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-reverse@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-reverse-code-points@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-reverse-grapheme-clusters@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";var d=["grapheme","code_point","code_unit"],a={grapheme:o,code_point:n,code_unit:i},p=r(d);function l(r){var i,n;if(!e(r))throw new TypeError(m("invalid argument. First argument must be a string. Value: `%s`.",r));if(n={mode:"grapheme"},arguments.length>1&&!s(i=arguments[1]))throw new TypeError(m("invalid argument. Options argument must be an object. Value: `%s`.",i));if(i&&t(i,"mode")&&(n.mode=i.mode,!p(n.mode)))throw new TypeError(m('invalid option. `%s` option must be one of the following: "%s". Value: `%s`.',"mode",d.join('", "'),n.mode));return a[n.mode](r)}export{l as default};
//# sourceMappingURL=index.mjs.map
