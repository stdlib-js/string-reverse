{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport prevGraphemeClusterBreak from '@stdlib/string-prev-grapheme-cluster-break';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Reverses a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} reversed string\n*\n* @example\n* var out = reverse( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* @example\n* var out = reverse( 'presidential election' );\n* // returns 'noitcele laitnediserp'\n*\n* @example\n* var out = reverse( 'javaScript' );\n* // returns 'tpircSavaj'\n*\n* @example\n* var out = reverse( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH'\n*/\nfunction reverse( str ) {\n\tvar out;\n\tvar brk;\n\tvar idx;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '0hW3R', str ) );\n\t}\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\n\tout = [];\n\tidx = str.length - 1;\n\twhile ( idx >= 0 ) {\n\t\tbrk = prevGraphemeClusterBreak( str, idx );\n\t\tfor ( i = brk + 1; i <= idx; i++ ) {\n\t\t\tout.push( str.charAt( i ) );\n\t\t}\n\t\tidx = brk;\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\n\nexport default reverse;\n"],"names":["reverse","str","out","brk","idx","i","isString","TypeError","format","length","prevGraphemeClusterBreak","push","charAt","join"],"mappings":";;0SAoDA,SAASA,EAASC,GACjB,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAUL,GACf,MAAM,IAAIM,UAAWC,EAAQ,QAASP,IAEvC,GAAa,KAARA,EACJ,MAAO,GAKR,IAFAC,EAAM,GACNE,EAAMH,EAAIQ,OAAS,EACXL,GAAO,GAAI,CAElB,IAAMC,GADNF,EAAMO,EAA0BT,EAAKG,IACrB,EAAGC,GAAKD,EAAKC,IAC5BH,EAAIS,KAAMV,EAAIW,OAAQP,IAEvBD,EAAMD,CACN,CACD,OAAOD,EAAIW,KAAM,GAClB"}